{"version":3,"file":"static/js/139.ef3e7609.chunk.js","mappings":"oOA+BA,EA3BgB,WACd,IACA,ECHwB,SAAAA,GACxB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAHAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAeL,GAAIM,MAAK,SAAAC,GAAK,OAAIJ,EAAWI,EAAf,GAC9B,GAAE,CAACP,IACG,CAAEE,QAAAA,EACV,CDJqBM,EADAC,EAAAA,EAAAA,MAAZC,SACAR,EAAR,EAAQA,QAER,OACE,2BACuB,KAAb,OAAPA,QAAO,IAAPA,OAAA,EAAAA,EAASS,UACR,uBAAG,+CAEL,wBACGT,EAAQU,KAAI,SAAAC,GACX,OACE,2BACE,yBAAG,WAASA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOb,GAKnB,QAIR,C,+LEvBDgB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQT,KAAI,YAC/B,MAAO,CACLZ,GAFgD,EAAhBA,GAGhCsB,MAHgD,EAAZA,MAKvC,KAPwB,2CAAH,qDAUXC,EAAS,mCAAG,WAAMC,GAAN,uFACAR,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBO,EADrB,2BADA,cACjBL,EADiB,yBAIhBA,EAASC,KAAKC,QAAQT,KAAI,YAC/B,MAAO,CACLZ,GAFgD,EAAhBA,GAGhCsB,MAHgD,EAAZA,MAKvC,KATsB,2CAAH,sDAYTG,EAAU,mCAAG,WAAMzB,GAAN,uFACDgB,EAAAA,EAAAA,IAAA,iBACXhB,EADW,oBACGiB,EADH,oBADC,cAClBE,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVM,EAAU,mCAAG,WAAM1B,GAAN,uFACDgB,EAAAA,EAAAA,IAAA,iBACXhB,EADW,4BACWiB,EADX,oBADC,cAClBE,EADkB,yBAKjBA,EAASC,KAAKO,KAAKf,KAAI,YAC5B,MAAO,CACLgB,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9C9B,GALqE,EAATA,GAO/D,KAZuB,2CAAH,sDAeV+B,EAAU,mCAAG,WAAM/B,GAAN,uFACDgB,EAAAA,EAAAA,IAAA,iBACXhB,EADW,4BACWiB,EADX,2BADC,cAClBE,EADkB,yBAIjBA,EAASC,KAAKC,QAAQT,KAAI,YAC/B,MAAO,CACLE,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCf,GAJ0D,EAATA,GAMpD,KAVuB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","utils/hooks/useReviews.jsx","utils/api/api.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useReviews } from 'utils/hooks/useReviews';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const { reviews } = useReviews(movieId);\n\n  return (\n    <div>\n      {reviews?.length === 0 && (\n        <p>We don't have any reviews for this movies</p>\n      )}\n      <ul>\n        {reviews.map(review => {\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Reviews;","import * as API from '../api/api';\nimport { useState, useEffect } from 'react';\n\nexport const useReviews = id => {\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    API.getReviews(id).then(value => setReviews(value));\n  }, [id]);\n  return { reviews };\n};","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '881e4f4e42426200caf7188874b6c85d';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getSearch = async inputValue => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCredits = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["id","useState","reviews","setReviews","useEffect","API","then","value","useReviews","useParams","movieId","length","map","review","author","content","axios","API_KEY","getTrending","response","data","results","title","getSearch","inputValue","getDetails","getCredits","cast","name","character","profile_path","getReviews"],"sourceRoot":""}