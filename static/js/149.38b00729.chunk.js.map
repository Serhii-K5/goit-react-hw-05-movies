{"version":3,"file":"static/js/149.38b00729.chunk.js","mappings":"oMAEaA,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,OAUxB,C,4HCZYI,EAAa,WACxB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAeA,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,SAChCD,GACFE,EAAAA,GAAcF,GAAYG,MAAK,SAAAC,GAAK,OAAIT,EAAUS,EAAd,GAEvC,GAAE,CAACP,KAGF,4BACE,kBAAMQ,SAfW,SAAAC,GACnBR,EAAgB,CAAES,MAAOD,EAAIE,OAAO,GAAGJ,QACvCE,EAAIG,gBAEL,EAWG,WACE,kBAAOC,KAAK,OAAOC,YAAY,eAC/B,mBAAQD,KAAK,SAAb,SAAsB,eAExB,SAAC5B,EAAA,EAAD,CAAcC,OAAQA,MAG3B,ECzBD,EAJe,WACb,OAAO,SAACU,EAAD,GACR,C,+LCFDmB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,sCAAyCC,IADvC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,QAAQ/B,KAAI,YAC/B,MAAO,CACLG,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KAPwB,2CAAH,qDAUX0B,EAAS,mCAAG,WAAMC,GAAN,uFACAP,EAAAA,EAAAA,IAAA,gCACIC,EADJ,kBACqBM,EADrB,2BADA,cACjBJ,EADiB,yBAIhBA,EAASC,KAAKC,QAAQ/B,KAAI,YAC/B,MAAO,CACLG,GAFgD,EAAhBA,GAGhCG,MAHgD,EAAZA,MAKvC,KATsB,2CAAH,sDAYT4B,EAAU,mCAAG,WAAM/B,GAAN,uFACDuB,EAAAA,EAAAA,IAAA,iBACXvB,EADW,oBACGwB,EADH,oBADC,cAClBE,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAOVK,EAAU,mCAAG,WAAMhC,GAAN,uFACDuB,EAAAA,EAAAA,IAAA,iBACXvB,EADW,4BACWwB,EADX,oBADC,cAClBE,EADkB,yBAKjBA,EAASC,KAAKM,KAAKpC,KAAI,YAC5B,MAAO,CACLqC,KAFqE,EAAxCA,KAG7BC,UAHqE,EAAlCA,UAInCC,aAJqE,EAAvBA,aAK9CpC,GALqE,EAATA,GAO/D,KAZuB,2CAAH,sDAeVqC,EAAU,mCAAG,WAAMrC,GAAN,uFACDuB,EAAAA,EAAAA,IAAA,iBACXvB,EADW,4BACWwB,EADX,2BADC,cAClBE,EADkB,yBAIjBA,EAASC,KAAKC,QAAQ/B,KAAI,YAC/B,MAAO,CACLyC,OAF0D,EAA1BA,OAGhCC,QAH0D,EAAlBA,QAIxCvC,GAJ0D,EAATA,GAMpD,KAVuB,2CAAH,qD","sources":["components/TrendingList/TrendingList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","utils/api/api.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const TrendingList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};","import { useSearchParams } from 'react-router-dom';\nimport * as API from '../../utils/api/api';\nimport { useEffect, useState } from 'react';\nimport { TrendingList } from 'components/TrendingList/TrendingList';\n\nexport const SearchForm = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleSubmit = evt => {\n    setSearchParams({ query: evt.target[0].value });\n    evt.preventDefault();\n    return;\n  };\n\n  useEffect(() => {\n    const movieTitle = searchParams.get('query');\n    if (movieTitle) {\n      API.getSearch(movieTitle).then(value => setMovies(value));\n    }\n  }, [searchParams]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" placeholder=\"Search...\"></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <TrendingList movies={movies} />\n    </div>\n  );\n};","import { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst Movies = () => {\n  return <SearchForm />;\n};\n\nexport default Movies;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '881e4f4e42426200caf7188874b6c85d';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getSearch = async inputValue => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${inputValue}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const getDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getCredits = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n};\n"],"names":["TrendingList","movies","location","useLocation","map","movie","to","id","state","from","title","SearchForm","useState","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","movieTitle","get","API","then","value","onSubmit","evt","query","target","preventDefault","type","placeholder","axios","API_KEY","getTrending","response","data","results","getSearch","inputValue","getDetails","getCredits","cast","name","character","profile_path","getReviews","author","content"],"sourceRoot":""}